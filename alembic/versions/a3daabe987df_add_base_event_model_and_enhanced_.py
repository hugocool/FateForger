"""add_base_event_model_and_enhanced_planning_session

Revision ID: a3daabe987df
Revises: 14ece55ca4f6
Create Date: 2025-07-16 13:21:47.682672

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a3daabe987df"
down_revision: Union[str, Sequence[str], None] = "14ece55ca4f6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "base_events",
        sa.Column("event_id", sa.String(length=255), nullable=False),
        sa.Column("calendar_id", sa.String(length=255), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("location", sa.String(length=500), nullable=True),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=False),
        sa.Column("all_day", sa.Boolean(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("UPCOMING", "COMPLETED", "CANCELLED", name="event_status"),
            nullable=False,
        ),
        sa.Column("event_metadata", sa.JSON(), nullable=True),
        sa.Column("source", sa.String(length=50), nullable=False),
        sa.Column("external_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("last_synced_at", sa.DateTime(), nullable=True),
        sa.Column("bot_managed", sa.Boolean(), nullable=False),
        sa.Column("agent_type", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("event_id"),
    )
    op.create_index(
        op.f("ix_base_events_calendar_id"), "base_events", ["calendar_id"], unique=False
    )
    op.create_index(
        op.f("ix_base_events_end_time"), "base_events", ["end_time"], unique=False
    )
    op.create_index(
        op.f("ix_base_events_start_time"), "base_events", ["start_time"], unique=False
    )

    # Use batch mode for SQLite compatibility
    with op.batch_alter_table("planning_sessions", schema=None) as batch_op:
        batch_op.add_column(sa.Column("event_id", sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column("thread_ts", sa.String(length=50), nullable=True))
        batch_op.add_column(
            sa.Column("channel_id", sa.String(length=50), nullable=True)
        )
        batch_op.add_column(
            sa.Column("next_nudge_attempt", sa.Integer(), nullable=False)
        )
        batch_op.add_column(sa.Column("last_nudge_at", sa.DateTime(), nullable=True))
        batch_op.create_foreign_key(
            "fk_planning_sessions_event_id", "base_events", ["event_id"], ["event_id"]
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("planning_sessions", schema=None) as batch_op:
        batch_op.drop_constraint("fk_planning_sessions_event_id", type_="foreignkey")
        batch_op.drop_column("last_nudge_at")
        batch_op.drop_column("next_nudge_attempt")
        batch_op.drop_column("channel_id")
        batch_op.drop_column("thread_ts")
        batch_op.drop_column("event_id")

    op.drop_index(op.f("ix_base_events_start_time"), table_name="base_events")
    op.drop_index(op.f("ix_base_events_end_time"), table_name="base_events")
    op.drop_index(op.f("ix_base_events_calendar_id"), table_name="base_events")
    op.drop_table("base_events")
    # ### end Alembic commands ###
